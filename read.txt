after creating routing module components are created using cli using this command
    ng g c new-component --module <modulename(like app)>


How to deploy angular 6 app on IIS server...
Step1: Create the build of your project by using this command:-
        ng build --prod --base-href /<anyNameyouwantforyourproject>/ 
            note:- base-href is optional

Step 2: Create a folder with any name where is your iis server installed and then paste the build files in the folder you are created..
Step 3: Go to your IIS server, right click on the Default websites => click on add application =>
        a) then give the base href name in the Alias 
        b) Select the physical path of your application which is the path of the folder where IIS Server is installed
        c) then go to your application  in the IIS server right click on it and go to manage option then click on browse.
    

Step 4(otpional): If your application is not live then go to your server => next goto the IIS section and double click on authentication. Select ASP.NET Impersonation and select 'Disable' at the top of the right pane.  

Then your application will be live. Thankyou

========================================================
Use cookies in the angular 6...
To install the coookes npm:- npm i ngx-cookie-service --save
visit the link for how to use cookes:
    https://www.npmjs.com/package/ngx-cookie-service

================================================================
How to get the element of html to ts file..

In HTML file
    <input type="text" #custName >

In ts file...
    import { Component, OnInit, ViewChild, ElementRef } from '@angular/core'; // step 1 import the following ref
    @ViewChild('custName') id: ElementRef<HTMLElement>; //Step2
    //then use it when even you want....
    this.id.nativeElement.focus();


=================================================================================

How to remove the issue of cors while calling wcf api with angular 6

Step1: In WCF API create a new file Global.asax.
Step2: Go to the Global.asax.cs then go to in the function : Application_BeginRequest
Step3: Write the following line of code in Application_BeginRequest function:
    HttpContext.Current.Response.AddHeader("Access-Control-Allow-Origin", "*");
    if (HttpContext.Current.Request.HttpMethod == "OPTIONS")
    {
        HttpContext.Current.Response.AddHeader("Access-Control-Allow-Methods", "GET, POST");
        HttpContext.Current.Response.AddHeader("Access-Control-Allow-Headers", "Content-Type, Accept");
        HttpContext.Current.Response.AddHeader("Access-Control-Max-Age", "1728000");
        HttpContext.Current.Response.End();
    }
Step4: Run the wcf service and call through the angular...